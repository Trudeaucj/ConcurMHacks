{"name":"ConcurMHacks","tagline":"Get started and readme for @Concur @MHacks","body":"<center><img src=\"https://jfqcza.bn1.livefilestore.com/y2paqP_3uagi8J3WlP4-pNt4kJoOzRKmuohSQUsrjaegIaoNbNZJ7EXLEflIO6XYAOKM6scpKxbtXPg10RL5OO3A9bc6m-zERVRHUYB1OEGq8s/Concur_Logo_VT_Color_500px.png?psid=1\" width=\"190px\" /></center>\r\n\r\nWhat is Concur?\r\n--\r\n\r\nConcur is a travel and expense software solution that lets 25M business travelers book their travel, capture expense, submit expense reports, and more.  Concur processes over 55 million transactions every year, representing $50 billion spend on T&E.\r\n\r\n<center>\r\n<img src=\"https://jfqcza.bn1.livefilestore.com/y2prf7yXWtqtcsjpFh2XXu6XQ7ppeIg8SqyBAFEUIcqwGG-TQz1vpZhxx6ac2ySbguL5EAsg0IerEzlUQRynANwyVmyt9dUxWWwNS-x75NX248/Screen%20Shot%202014-05-31%20at%2012.02.06%20PM.png?psid=1\" /></center>\r\n\r\nWhat can I do with Concur APIs?\r\n--\r\n\r\nThe **Travel/Itinerary API (v1.1)** lets you access a Concur user's itinerary, including hotel/flight booking info.  As an example, you can mash-up the Itinerary API with a restaurant database/API to provide recommendations of places to eat near a Concur user's hotel booking.\r\n\r\nThe **Expense API (v3.0)** allows you to get (and push) a Concur user's expense information, including expense line items, their types (e.g. food, lodging), totals, and even receipt images.\r\n\r\nHere's an example on how to get an Itinerary List of a Concur user:\r\n\r\n    curl https://www.concursolutions.com/api/travel/trip/v1.1\r\n    -H \"Authorization: OAuth <insert your access token here>\"\r\n    \r\nTo get an expense summary by using the Expense Report Digest API:\r\n\r\n    curl https://www.concursolutions.com/api/v3.0/expense/reportdigests\r\n    -H \"Authorization: OAuth <insert your access token here>\"\r\n    -H \"Accept: application/json\"\r\n    \r\n**To get an access token** (or learn how to generate one), please click [here](#token) to advance to the section below.\r\n\r\nYou can interact with the API using Swagger [here](https://www.concursolutions.com/api/docs/index.html)\r\n\r\n<a href=\"https://www.concursolutions.com/api/docs/index.html\"><img src=\"https://jfqcza.bn1.livefilestore.com/y2phbDjCiRKZp3Btneho4UncjWK46iv8GFhyKdTZ7xJJ9BCJ-JJiNrw7ieCenHdSGPgEZL0Tj7IYjGypUv61u3KdIrjj0dAUM35DjC3cPzLls0/Screen%20Shot%202014-05-31%20at%202.09.43%20PM.png?psid=1\" width=\"610px\" /></a>\r\n\r\nFor the Itinerary APIs (v1.1), full API documentation, and apps that use the APIs, please refer to:\r\n\r\n[https://developer.concur.com/get-started/webservices-overview](https://developer.concur.com/get-started/webservices-overview)\r\n\r\n<a name=\"samplecode\">SDKs / Sample code</a>\r\n--------------\r\n- [NodeJS SDK](https://github.com/concur/concur-platform-sdk-js)\r\n- [C# .NET SDK](https://github.com/concur/concur-platform-sdk-dotnet)\r\n\r\n- [Pebble SDK C/Javascript](https://developer.getpebble.com/blog/2014/09/03/Pebble-Concur-Mojio/)\r\n- [Windows 8 C#/XAML](https://github.com/ismaelc/Concur-Windows8-SampleCode)\r\n- [C#](https://gist.github.com/dberke711/c8d0c9e04c7e76220d4e) (Generate access token native flow)\r\n- [PHP/curl](http://runnable.com/UtWlKVi9ZnsnAABx/upload-receipts-to-concur-using-php-curl) (POST image receipts)\r\n- [Python](https://gist.github.com/Trudeaucj/09c25e79c332e93703a0) (Generate access token)\r\n\r\n- Java using [Maven](https://github.com/Trudeaucj/Concur-java-examples)\r\n\r\n\r\n<a name=\"mashup\">Ideas for a Concur-powered business travel app:</a>\r\n--\r\n\r\nThese are just example ideas from past external hackathons. We'd love for you to think beyond the ideas presented below :)  Find other ideas [here](#example).  \r\n\r\n[Challengepost](http://challengepost.com/software/built-with/concur) lists Concur API integrations from previous hackathons.  Definitely worth checking out!\r\n[GitHub GreenGuest](https://github.com/Trudeaucj/greenguest) A team we sent to the 2015 AT&T Developer Summit who took home the M2X IoT Challenge prize!\r\n\r\n<a name=\"addl\">Additional Information</a>\r\n--\r\nThe subsections below provide a more detailed information on how to:\r\n\r\n  - [Generate an access token](#token)\r\n  - [POST/GET dummy data to/from Concur](#dummy)\r\n  - [Sample code](#samplecode)\r\n  - [Example apps in the App Center and previous hackathons](#example)\r\n\r\n\r\n <a name=\"token\">**Generate an access token**</a>\r\n --\r\n\r\n  1. **Get your Consumer Key**  \r\n\r\n After logging in to http://concursolutions.com, go to Administration -> Register Partner Application -> Concur Partner Application (Modify).  We need the consumer key so we can call the endpoint that would return the access token. (**Note: Get your Concur login/password from Chris at the Concur booth or email him at chris.ismael@concur.com**)\r\n\r\n  <img src='http://chrispogeek.files.wordpress.com/2014/01/untitled.png' width=\"600px\" />\r\n\r\n  2.  **Call the access token request endpoint**\r\n\r\n  Here's what the HTTP call looks like to request for an access token:\r\n\r\n        GET https://www.concursolutions.com/net2/oauth2/accesstoken.ashx HTTP 1.1\r\n        Authorization: Basic am9obl9kZXZlbG90bWFpbC5jb206VHJhdmVsJkV4cGVuc2UkMjAxMg==\r\n        X-ConsumerKey: eZByXv2X41cJlC21pSVvRi    \r\n\r\n  Note that we already have `X-ConsumerKey` from number 1.  To generate the `Authorization: Basic` value, you need to Base64-encode the login ID, colon and password such that john_developer@hotmail.com:Travel&Expense$2012 becomes am9obl9kZXZlbG90bWFpbC5jb206VHJhdmVsJkV4cGVuc2UkMjAxMg==.  If you're not doing this programmatically yet, you can use this [nifty web tool](http://www.base64encode.org/) to generate that value (remember to choose Encode).\r\n\r\n  If you're using a Terminal, an equivalent curl statement of the above would be:\r\n        \r\n        curl https://www.concursolutions.com/net2/oauth2/accesstoken.ashx\r\n        -H \"Authorization: Basic am9obl9kZXZlbG90bWFpbC5jb206VHJhdmVsJkV4cGVuc2UkMjAxMg==\"\r\n        -H \"X-ConsumerKey: eZByXv2X41cJlC21pSVvRi\"\r\n\r\n  If the call is successful, you should get an XML response with a `<Token>` node.  That's your access token. We recommend that you use [Postman](http://www.getpostman.com/), a Chrome extension, to help you manage your API calls (not just Concur ones).  Here's what the API calls look like in Postman:\r\n\r\n  <img src='http://chrispogeek.files.wordpress.com/2014/01/screen-shot-2014-01-13-at-4-45-35-pm.png' width=\"600px\" />\r\n\r\n  3.  **Call the APIs to pull expense report items**\r\n\r\n After getting an access token, we can pull dummy data from the Expense Report Digest, like so (in Terminal):\r\n\r\n        curl https://www.concursolutions.com/api/v3.0/expense/reportdigests\r\n        -H \"Authorization: OAuth <insert your access token here>\"\r\n \r\n  This would return an Expense Report response, with a field called `ID`.  We need this ID to extract the expense line items we created in the app earlier.  To liven things up a bit, let's use the [Swagger](https://www.concursolutions.com/api/docs/index.html#!/Entries) documentation of the \"Entries\" API to get the individual expense line items:\r\n\r\n  <img src='https://jfqcza.bn1302.livefilestore.com/y2pExFhXefF7BWcggCWbeRkUyOUyEf1UdRi0HoCcpj8PKfaGMub-K8xc0BXHsX2NUFlNp54-m6X3aJ7dRNLQiIHfyYJhdtTiEJEArnZJ-r7NCA/Screen%20Shot%202014-04-22%20at%201.21.55%20PM.png?psid=1' width=\"600px\" />\r\n\r\n  We highlighted two things here, the (oval) field where you put in your access token, and the (rectangle) field where you put in the `ID` we got from the previous API call.  Note that we can do this same call in curl, or in any fashion you want.  Swagger just provides us a consolidated way to make the API calls.\r\n\r\n  To execute the call, click the \"Try it out!\" button.  You should get a response like this below:\r\n\r\n  <img src='https://jfqcza.bn1304.livefilestore.com/y2pty6lMBv5XXLjA_mT5HLpSNea4hVr3AUCRuEI207Wr1otLVxy86klHYuNDP0N-cvb75IFJvicR1jR2K7X3wqJXsH_AQNcEWkp6iO4t3jXRCs/Screen%20Shot%202014-04-22%20at%201.29.22%20PM.png?psid=1' width=\"600px\" />\r\n\r\n **Note: The steps demonstrated above follow the OAuth Native Flow.  If you prefer something similar to a Facebook login experience, you can check out the OAuth Web Flow [here](https://developer.concur.com/api-documentation/oauth-20-0)**\r\n\r\n[Back to Top](#addl)\r\n\r\n<a name=\"dummy\">**POST/GET dummy data to/from Concur - the API or app**</a>\r\n--\r\n\r\n  1. **Pushing dummy data to Concur using the API**  \r\n\r\n    POST a dummy Itinerary to Concur:\r\n\r\n          Request Type = POST\r\n          Authorization = OAuth <your access token>\r\n          URI = https://www.concursolutions.com/api/travel/trip/v1.1/\r\n          ContentType = Application/XML\r\n          Body = \r\n           <?xml version=\"1.0\"?>\r\n           <Itinerary xmlns=\"http://www.concursolutions.com/api/travel/trip/2010/06\">\r\n           <TripName>TechCrunch Disrupt Concur</TripName>\r\n           <StartDateLocal>2014-10-30T03:47:14</StartDateLocal>\r\n           <EndDateLocal>2014-11-06T03:47:14</EndDateLocal>\r\n           <Bookings>\r\n            <Booking>\r\n             <Segments>\r\n                 <Hotel>\r\n                     <Status>HK</Status>\r\n                     <StartCityCode>SFO</StartCityCode>\r\n                     <StartDateLocal>2014-10-30T07:47:14</StartDateLocal>\r\n                     <EndDateLocal>2014-11-06T03:47:14</EndDateLocal>\r\n                     <Name>Times Square Hilton New York</Name>\r\n                     <RecordLocator>Hotel Locator</RecordLocator>\r\n                     <RoomDescription>1 KING BED ACCESSIBLE ROOM - K1RRC</RoomDescription>\r\n                     <Currency>USD</Currency>\r\n                     <CancellationPolicy>Cxl 1 day prior to Arrival</CancellationPolicy>\r\n                     <DailyRate>240.3500</DailyRate>\r\n                     <NumRooms>1</NumRooms>\r\n                     <NumPersons>1</NumPersons>\r\n                     <RateCode>LV4</RateCode>\r\n                     <Charges>\r\n                         <Rate>\r\n                             <Currency>USD</Currency>\r\n                             <Amount>10.00</Amount>\r\n                             <StartDatelocal>2014-05-30T07:47:14</StartDatelocal>\r\n                             <IsPrimary>false</IsPrimary>\r\n                             <SemanticsCode>ROOMRATE</SemanticsCode>\r\n                             <PerUnit>DAY</PerUnit>\r\n                             <NumUnits>3.00</NumUnits>\r\n                         </Rate>\r\n                     </Charges>\r\n                 </Hotel>\r\n             </Segments>\r\n             <RecordLocator>Disrupt123</RecordLocator>\r\n             <BookingSource>Sample Itin for Disrupt</BookingSource>\r\n             <DateBookedLocal>2014-10-30T03:47:14</DateBookedLocal>\r\n           </Booking>\r\n           <Booking>\r\n             <Segments>\r\n                 <Air>\r\n                     <Vendor>AA</Vendor>\r\n                     <FlightNumber>425</FlightNumber>\r\n                     <StartCityCode>SFO</StartCityCode>\r\n                     <StartDateLocal>2014-10-30T03:47:14</StartDateLocal>\r\n                     <EndCityCode>NYC</EndCityCode>\r\n                     <EndDateLocal>2014-11-30T07:47:14</EndDateLocal>\r\n                     <Cabin>O</Cabin>\r\n                     <ClassOfService>O</ClassOfService>\r\n                 </Air>\r\n             </Segments>\r\n             <RecordLocator>Air Locator</RecordLocator>\r\n             <BookingSource>Sample Itin for Disrupt</BookingSource>\r\n             <DateBookedLocal>2014-10-30T03:47:14</DateBookedLocal>\r\n           </Booking>\r\n         </Bookings>\r\n         </Itinerary>\r\n   \r\n    **Hack tip :** More details on the Itinerary API v1.1. [here](https://developer.concur.com/api-documentation/web-services/itinerary/itinerary-resource/itinerary-resource-get)\r\n         \r\n    POST Expense Report Header to Concur: \r\n\r\n         Request Type = POST\r\n         Authorization = OAuth <your access token>\r\n         URI = https://www.concursolutions.com/api/expense/expensereport/v1.1/report\r\n         ContentType = Application/XML\r\n         Body = \r\n         <Report xmlns=\"http://www.concursolutions.com/api/expense/expensereport/2011/03\">\r\n             <Name>Disrupt Hackathon NYC Trip</Name>\r\n             <Purpose>All Hackathon Expenses</Purpose>\r\n             <Comment>Includes hotel and meals.</Comment>\r\n             <OrgUnit1>US</OrgUnit1>\r\n             <OrgUnit3>Bellevue</OrgUnit3>\r\n             <Custom1>Client</Custom1>\r\n             <Custom2>Local</Custom2>\r\n             <UserDefinedDate>2014-05-01 15:15:07.0</UserDefinedDate>\r\n         </Report>\r\n    **Hack tip 1:** You can POST using JSON by setting the header to `Content-Type:application/json` and checking out a sample JSON body in our [Swagger](https://www.concursolutions.com/api/docs/index.html#!/Entries) doc.  Note that the examples here use v1.1, and those shown in Swagger use v3.0.\r\n\r\n    **Hack tip 2**: You need to generate a report header to be able to submit an expense entry.  A collection of entries is a report.\r\n        \r\n    *Click [here](https://developer.concur.com/api-documentation/web-services/expense-report) to view the relationship of an Expense Report Header to an Expense Report Entry and search for **Expense Report Processes**.   *\r\n    \r\n    GET Expense Report Details:\r\n\r\n         Request Type = GET\r\n         Authorization = OAuth <your access token>\r\n         URI = https://www.concursolutions.com/api/expense/expensereport/v2.0/Reports/?reportcountry=US\r\n         ContentType = Application/JSON\r\n\r\n    POSTing Expense Report Entry:\r\n\r\n         Request Type = POST\r\n         Authorization = OAuth <your access token>\r\n         URI = https://www.concursolutions.com/api/expense/expensereport/v1.1/report/B6F4FD62FB424911A3B8/entry\r\n         ContentType = Application/XML\r\n         Body = \r\n         <ReportEntries xmlns=\"http://www.concursolutions.com/api/expense/expensereport/2011/03\">\r\n         <Expense>\r\n             <CrnCode>USD</CrnCode>\r\n             <ExpKey>BRKFT</ExpKey>\r\n             <Description>Starbucks for Breakfast</Description>\r\n             <TransactionDate>2014-05-01</TransactionDate>\r\n             <TransactionAmount>15.54</TransactionAmount>\r\n             <Comment>Breakfast meeting</Comment>\r\n             <VendorDescription>Starbucks</VendorDescription>\r\n             <IsPersonal>N</IsPersonal>\r\n         </Expense>\r\n         </ReportEntries> \r\n  2. **Pushing dummy expense data to Concur using the app**\r\n   \r\n   You can access the web version of Concur at http://concursolutions.com/ or get the mobile app from [App Store](https://itunes.apple.com/us/app/concur-travel-receipts-expense/id335023774?mt=8) or [Google Play](https://play.google.com/store/apps/details?id=com.concur.breeze).\r\n\r\n   <center>\r\n<img src=\"https://jfqcza.bn1.livefilestore.com/y2prf7yXWtqtcsjpFh2XXu6XQ7ppeIg8SqyBAFEUIcqwGG-TQz1vpZhxx6ac2ySbguL5EAsg0IerEzlUQRynANwyVmyt9dUxWWwNS-x75NX248/Screen%20Shot%202014-05-31%20at%2012.02.06%20PM.png?psid=1\" /></center>\r\n\r\n   You can view/add new expenses (and even add a receipt image!) to have a variety of data to pull for your API calls. After adding expenses, you can create a report to associate it with by tapping the \"Add to Report\" button (in the last screenshot above).\r\n\r\n[Back to Top](#addl)\r\n\r\n<a name=\"example\">Example apps</a>\r\n--\r\nAll app integrations with Concur can be found in the [App Center](https://www.concur.com/en-us/app-center).  Below are just two examples that would hopefully give you an idea on what to build:\r\n\r\n- [Challengepost](http://challengepost.com/software/built-with/concur) lists Concur API integrations from previous hackathons.  Definitely worth checking out!\r\n\r\n - [TravelText](https://www.concur.com/en-us/partners/transaction-capture/traveltext) - TravelText allows you to text your expenses right into Concur. No more paper receipts and Excel sheet mayhem!  Check out their video demo [here](https://www.youtube.com/watch?v=sxY_PO-QKZ0).\r\n\r\n - [Trover](https://www.concur.com/en-us/app-center/listing/nDhf34TiiC9RCocFM2xViin5c/Trover) - it's travel photography + business travel integration in one great app. Quoting from this [article](http://skift.com/2013/07/25/travel-photography-app-trover-secures-2-5-million-in-funding-from-concur/#/0), what they get for integrating with Concur is *\"being able to tap into Concur’s experience, knowledge and “great visibility into travel patterns”\"*.\r\n\r\n\r\n[Back to Top](#addl)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}